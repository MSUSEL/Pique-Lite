{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Derek Reimanis\\\\Documents\\\\msusel\\\\Pique-Lite\\\\src\\\\redux-form\\\\GitBranching.component.js\";\nimport React from 'react';\nimport { Field, FieldArray, reduxForm } from 'redux-form';\nimport EditorButton from '../components/editorButtion/EditorButton.component';\nimport { Content, List, ListItem, WithButtonContainer, ButtonGroupContainer } from './GitBranching.styles';\nimport FormInput from '../components/formInput/FormInput.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst renderField = ({\n  input,\n  label,\n  type\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n    children: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FormInput, { ...input,\n      type: type,\n      placeholder: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 7\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 5\n}, this);\n\nconst adaptFileEventToValue = delegate => e => delegate(e.target.files[0]);\n\nconst FileInput = ({\n  input: {\n    value: omitValue,\n    onChange,\n    onBlur,\n    ...inputProps\n  },\n  meta: omitMeta,\n  ...props\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    onChange: adaptFileEventToValue(onChange),\n    onBlur: adaptFileEventToValue(onBlur),\n    type: \"file\",\n    accept: \".json\",\n    ...props.input,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }, this);\n};\n\n_c = FileInput;\n\nconst renderPiqueFile = ({\n  fields\n}) => /*#__PURE__*/_jsxDEV(List, {\n  children: [/*#__PURE__*/_jsxDEV(ListItem, {\n    children: /*#__PURE__*/_jsxDEV(EditorButton, {\n      type: \"button\",\n      onClick: () => fields.push({}),\n      children: \"Add Pique File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this), fields.map((piqueFile, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n    children: /*#__PURE__*/_jsxDEV(WithButtonContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        name: `${piqueFile}.fileName`,\n        type: \"file\",\n        component: FileInput,\n        label: piqueFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(EditorButton, {\n        type: \"button\",\n        title: \"Remove Pique File\",\n        onClick: () => fields.remove(index),\n        children: [\"Remove Pique File #\", index + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 13\n  }, this))]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 36,\n  columnNumber: 5\n}, this);\n\nconst renderCommits = ({\n  fields,\n  meta: {\n    error\n  }\n}) => /*#__PURE__*/_jsxDEV(List, {\n  children: [/*#__PURE__*/_jsxDEV(ListItem, {\n    children: /*#__PURE__*/_jsxDEV(EditorButton, {\n      type: \"button\",\n      onClick: () => fields.push(),\n      children: \"Add commits\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this), fields.map((commit, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n    children: [/*#__PURE__*/_jsxDEV(WithButtonContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        name: `${commit}.commitName`,\n        type: \"text\",\n        component: renderField,\n        label: `Commit #${index + 1}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(EditorButton, {\n        type: \"button\",\n        title: \"Remove Commit\",\n        onClick: () => fields.remove(index),\n        children: [\"Remove Commit #\", index + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(FieldArray, {\n      name: `${commit}.piqueFile`,\n      component: renderPiqueFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 13\n  }, this)), error && /*#__PURE__*/_jsxDEV(ListItem, {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 15\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 63,\n  columnNumber: 5\n}, this);\n\nconst renderBranches = ({\n  fields\n}) => /*#__PURE__*/_jsxDEV(List, {\n  children: [/*#__PURE__*/_jsxDEV(ListItem, {\n    children: /*#__PURE__*/_jsxDEV(EditorButton, {\n      type: \"button\",\n      onClick: () => fields.push({}),\n      children: \"Add Branch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this), fields.map((branch, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n    children: [/*#__PURE__*/_jsxDEV(WithButtonContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        name: `${branch}.branchName`,\n        type: \"text\",\n        component: renderField,\n        label: \"Branch Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(EditorButton, {\n        type: \"button\",\n        title: \"Remove Branch\",\n        onClick: () => fields.remove(index),\n        children: [\"Remove Branch #\", index + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(FieldArray, {\n      name: `${branch}.commits`,\n      component: renderCommits\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 13\n  }, this))]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 93,\n  columnNumber: 5\n}, this);\n\nconst GitBranchingForm = props => {\n  const {\n    handleSubmit,\n    pristine,\n    reset,\n    submitting\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Content, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Upload files to your projects!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"projectName\",\n          type: \"text\",\n          label: \"Project Name\",\n          component: renderField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FieldArray, {\n          name: \"branches\",\n          component: renderBranches\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ButtonGroupContainer, {\n          children: [/*#__PURE__*/_jsxDEV(EditorButton, {\n            type: \"submit\",\n            disabled: submitting,\n            children: \"Sumbit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(EditorButton, {\n            type: \"button\",\n            disabled: pristine || submitting,\n            onClick: reset,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = GitBranchingForm;\nexport default reduxForm({\n  form: 'GitBranchingForm' // a unique identifier for this form\n\n})(GitBranchingForm);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FileInput\");\n$RefreshReg$(_c2, \"GitBranchingForm\");","map":{"version":3,"sources":["C:/Users/Derek Reimanis/Documents/msusel/Pique-Lite/src/redux-form/GitBranching.component.js"],"names":["React","Field","FieldArray","reduxForm","EditorButton","Content","List","ListItem","WithButtonContainer","ButtonGroupContainer","FormInput","renderField","input","label","type","adaptFileEventToValue","delegate","e","target","files","FileInput","value","omitValue","onChange","onBlur","inputProps","meta","omitMeta","props","renderPiqueFile","fields","push","map","piqueFile","index","remove","renderCommits","error","commit","renderBranches","branch","GitBranchingForm","handleSubmit","pristine","reset","submitting","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Field, FieldArray, reduxForm} from 'redux-form';\nimport EditorButton from '../components/editorButtion/EditorButton.component';\nimport {Content, List, ListItem, WithButtonContainer, ButtonGroupContainer} from './GitBranching.styles'\nimport FormInput from '../components/formInput/FormInput.component';\n\nconst renderField = ({ input, label, type}) => (\n    <div>\n      <label>{label}</label>\n      <div>\n        <FormInput {...input} type={type} placeholder={label} />\n      </div>\n    </div>\n  );\n\nconst adaptFileEventToValue = delegate => e => delegate(e.target.files[0]);\n\nconst FileInput = ({ \n    input: { value: omitValue, onChange, onBlur, ...inputProps }, \n    meta: omitMeta, \n    ...props \n  }) => {\n    return (\n      <input\n        onChange={adaptFileEventToValue(onChange)}\n        onBlur={adaptFileEventToValue(onBlur)}\n        type=\"file\"\n        accept=\".json\"\n        {...props.input}\n        {...props}\n      />\n    );\n  };\n\nconst renderPiqueFile = ({fields}) => (\n    <List>\n        <ListItem>\n            <EditorButton type=\"button\" onClick={() => fields.push({})}>Add Pique File</EditorButton>\n        </ListItem>\n        {fields.map((piqueFile, index) => (\n            <ListItem key={index}>\n                <WithButtonContainer>\n                        <Field\n                        name={`${piqueFile}.fileName`}\n                        type=\"file\"\n                        component={FileInput}\n                        label={piqueFile}\n                    />\n                    <EditorButton\n                        type=\"button\"\n                        title=\"Remove Pique File\"\n                        onClick={() => fields.remove(index)}\n                    >\n                        Remove Pique File #{index +1}\n                    </EditorButton>\n                </WithButtonContainer>\n            </ListItem>\n        ))}\n    </List>\n)\n\nconst renderCommits = ({ fields, meta: { error } }) => (\n    <List>\n        <ListItem>\n            <EditorButton type=\"button\" onClick={() => fields.push()}>Add commits</EditorButton>\n        </ListItem>\n            {fields.map((commit, index) => (\n            <ListItem key={index}>\n                <WithButtonContainer>\n                    <Field\n                        name={`${commit}.commitName`}\n                        type=\"text\"\n                        component={renderField}\n                        label={`Commit #${index + 1}`}\n                    />\n                    <EditorButton\n                        type=\"button\"\n                        title=\"Remove Commit\"\n                        onClick={() => fields.remove(index)}\n                    >\n                        Remove Commit #{index + 1}\n                    </EditorButton>\n                </WithButtonContainer>\n            <FieldArray name={`${commit}.piqueFile`} component={renderPiqueFile}/>         \n        </ListItem>\n    ))}\n    {error && <ListItem className=\"error\">{error}</ListItem>}\n</List>\n\n);\n\nconst renderBranches = ({fields}) => (\n    <List>\n        <ListItem>\n            <EditorButton type=\"button\" onClick={() => fields.push({})}>Add Branch</EditorButton>\n        </ListItem>\n        {fields.map((branch, index) => (\n            <ListItem key={index}>\n                <WithButtonContainer>\n                        <Field\n                        name={`${branch}.branchName`}\n                        type=\"text\"\n                        component={renderField}\n                        label=\"Branch Name\"\n                    />\n                    <EditorButton\n                        type=\"button\"\n                        title=\"Remove Branch\"\n                        onClick={() => fields.remove(index)}\n                    >\n                        Remove Branch #{index +1}\n                    </EditorButton>\n                </WithButtonContainer>\n              \n        \n            <FieldArray name={`${branch}.commits`} component={renderCommits}/>\n            </ListItem>\n        ))}\n    </List>\n)\n\nconst GitBranchingForm = (props) => {\n    const {handleSubmit, pristine, reset, submitting} = props;\n    return (\n        <Content>\n            <h3>Upload files to your projects!</h3>\n            <div>\n                <form onSubmit={handleSubmit}>\n                    <Field name=\"projectName\" type=\"text\" label=\"Project Name\" component={renderField} />\n                    <FieldArray name=\"branches\" component={renderBranches}/>\n                    <ButtonGroupContainer>\n                        <EditorButton type=\"submit\" disabled={submitting}>Sumbit</EditorButton>\n                        <EditorButton type=\"button\" disabled={pristine || submitting} onClick={reset}>Reset</EditorButton>\n                    </ButtonGroupContainer>\n                </form>\n            </div>\n        </Content>\n    )\n}\n\nexport default reduxForm({\n    form: 'GitBranchingForm', // a unique identifier for this form\n  })(GitBranchingForm);"]},"metadata":{},"sourceType":"module"}