{"ast":null,"code":"import ProjectInfoActionTypes from './ProjectInfo.actionTypes';\nconst INITIAL_STATE = {\n  projectName: \"\",\n  projectOwner: \"\",\n  branchName: [],\n  commitName: []\n};\n\nconst ProjectInfo = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ProjectInfoActionTypes.SET_PROJECT_NAME:\n      return { ...state,\n        projectName: action.payload\n      };\n\n    case ProjectInfoActionTypes.SET_PROJECT_OWNER:\n      return { ...state,\n        projectOwner: action.payload\n      };\n\n    case ProjectInfoActionTypes.SET_BRANCH_NAME:\n      return { ...state,\n        branchName: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = ProjectInfo;\nexport default ProjectInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectInfo\");","map":{"version":3,"sources":["C:/Users/Xuying Wang Swift/Desktop/msu-pique-lite/Pique-Lite/src/redux/projectInfo/ProjectInfo.redux.js"],"names":["ProjectInfoActionTypes","INITIAL_STATE","projectName","projectOwner","branchName","commitName","ProjectInfo","state","action","type","SET_PROJECT_NAME","payload","SET_PROJECT_OWNER","SET_BRANCH_NAME"],"mappings":"AAAC,OAAOA,sBAAP,MAAmC,2BAAnC;AACD,MAAMC,aAAa,GAAG;AAClBC,EAAAA,WAAW,EAAE,EADK;AAElBC,EAAAA,YAAY,EAAE,EAFI;AAGlBC,EAAAA,UAAU,EAAE,EAHM;AAIlBC,EAAAA,UAAU,EAAC;AAJO,CAAtB;;AAOA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGN,aAAT,EAAwBO,MAAxB,KAAmC;AACnD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKT,sBAAsB,CAACU,gBAA5B;AACI,aAAM,EACF,GAAGH,KADD;AAEFL,QAAAA,WAAW,EAAEM,MAAM,CAACG;AAFlB,OAAN;;AAIJ,SAAKX,sBAAsB,CAACY,iBAA5B;AACI,aAAM,EACF,GAAGL,KADD;AAEFJ,QAAAA,YAAY,EAAEK,MAAM,CAACG;AAFnB,OAAN;;AAIJ,SAAKX,sBAAsB,CAACa,eAA5B;AACQ,aAAM,EACF,GAAGN,KADD;AAEFH,QAAAA,UAAU,EAAEI,MAAM,CAACG;AAFjB,OAAN;;AAIR;AACI,aAAOJ,KAAP;AAjBR;AAmBH,CApBD;;KAAMD,W;AAsBN,eAAeA,WAAf","sourcesContent":[" import ProjectInfoActionTypes from './ProjectInfo.actionTypes'\r\nconst INITIAL_STATE = {\r\n    projectName: \"\",\r\n    projectOwner: \"\",\r\n    branchName: [],\r\n    commitName:[]\r\n}\r\n\r\nconst ProjectInfo = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case ProjectInfoActionTypes.SET_PROJECT_NAME:\r\n            return{\r\n                ...state,\r\n                projectName: action.payload\r\n            }\r\n        case ProjectInfoActionTypes.SET_PROJECT_OWNER:\r\n            return{\r\n                ...state,\r\n                projectOwner: action.payload\r\n            }\r\n        case ProjectInfoActionTypes.SET_BRANCH_NAME:\r\n                return{\r\n                    ...state,\r\n                    branchName: action.payload\r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default ProjectInfo;\r\n\r\n"]},"metadata":{},"sourceType":"module"}