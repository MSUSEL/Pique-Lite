{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Derek Reimanis\\\\Documents\\\\msusel\\\\Pique-Lite\\\\src\\\\components\\\\treeEditor\\\\projectSelect\\\\ProjectSelect.component.js\";\nimport React from 'react';\nimport { createStructuredSelector } from 'reselect';\nimport EditorButton from '../../editorButtion/EditorButton.component';\nimport { selectProjects } from '../../../redux/piqueTree/PiqueTree.selector';\nimport { connect } from 'react-redux';\nimport { setPiqueTree, setProjectName } from '../../../redux/piqueTree/PiqueTree.actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProjectSelect = ({\n  projects,\n  setProjectName,\n  setPiqueTree\n}) => {\n  console.log(projects);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: projects.map((p, i) => /*#__PURE__*/_jsxDEV(EditorButton, {\n      onClick: () => {\n        setProjectName(p.fileName);\n        setPiqueTree(p.fileContent);\n      },\n      children: p.fileName\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 37\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ProjectSelect;\nconst mapStateToProps = createStructuredSelector({\n  projects: selectProjects\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setProjectName: data => dispatch(setProjectName(data)),\n  setPiqueTree: data => dispatch(setPiqueTree(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectSelect);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectSelect\");","map":{"version":3,"sources":["C:/Users/Derek Reimanis/Documents/msusel/Pique-Lite/src/components/treeEditor/projectSelect/ProjectSelect.component.js"],"names":["React","createStructuredSelector","EditorButton","selectProjects","connect","setPiqueTree","setProjectName","ProjectSelect","projects","console","log","map","p","i","fileName","fileContent","mapStateToProps","mapDispatchToProps","dispatch","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,SAAQC,cAAR,QAA6B,6CAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,4CAA7C;;;AAEA,MAAMC,aAAa,GAAE,CAAC;AAACC,EAAAA,QAAD;AAAWF,EAAAA,cAAX;AAA2BD,EAAAA;AAA3B,CAAD,KAA8C;AAC/DI,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,sBACI;AAAA,cACKA,QAAQ,CAACG,GAAT,CAAa,CAACC,CAAD,EAAIC,CAAJ,kBAAU,QAAC,YAAD;AAAsB,MAAA,OAAO,EACjD,MAAM;AACFP,QAAAA,cAAc,CAACM,CAAC,CAACE,QAAH,CAAd;AACAT,QAAAA,YAAY,CAACO,CAAC,CAACG,WAAH,CAAZ;AACH,OAJmB;AAAA,gBAKfH,CAAC,CAACE;AALa,OAAmBD,CAAnB;AAAA;AAAA;AAAA;AAAA,YAAvB;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAdD;;KAAMN,a;AAgBN,MAAMS,eAAe,GAAGf,wBAAwB,CAAC;AAC7CO,EAAAA,QAAQ,EAAEL;AADmC,CAAD,CAAhD;;AAIA,MAAMc,kBAAkB,GAAGC,QAAQ,KAAK;AACpCZ,EAAAA,cAAc,EAAEa,IAAI,IAAID,QAAQ,CAACZ,cAAc,CAACa,IAAD,CAAf,CADI;AAEpCd,EAAAA,YAAY,EAAEc,IAAI,IAAID,QAAQ,CAACb,YAAY,CAACc,IAAD,CAAb;AAFM,CAAL,CAAnC;;AAIA,eAAef,OAAO,CAACY,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CV,aAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { createStructuredSelector } from 'reselect';\nimport EditorButton from '../../editorButtion/EditorButton.component';\nimport {selectProjects} from '../../../redux/piqueTree/PiqueTree.selector';\nimport { connect } from 'react-redux';\nimport { setPiqueTree, setProjectName } from '../../../redux/piqueTree/PiqueTree.actions';\n\nconst ProjectSelect= ({projects, setProjectName, setPiqueTree}) => {\n    console.log(projects)\n    return (\n        <div>\n            {projects.map((p, i) => <EditorButton key={i} onClick={\n                () => {\n                    setProjectName(p.fileName); \n                    setPiqueTree(p.fileContent)\n                }}>\n                    {p.fileName}\n                 </EditorButton>)\n        }\n        </div>\n    )\n}\n\nconst mapStateToProps = createStructuredSelector({\n    projects: selectProjects\n})\n\nconst mapDispatchToProps = dispatch => ({\n    setProjectName: data => dispatch(setProjectName(data)),\n    setPiqueTree: data => dispatch(setPiqueTree(data))\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectSelect);"]},"metadata":{},"sourceType":"module"}