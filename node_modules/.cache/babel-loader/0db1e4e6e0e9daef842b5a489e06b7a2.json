{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Xuying Wang Swift\\\\Desktop\\\\msu-pique-lite\\\\Pique-Lite\\\\src\\\\components\\\\treeEditor\\\\TreeEditor.component.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport EditorButton from '../editorButtion/EditorButton.component';\nimport NeighborNodesComponent from './neighbornodes/NeighborNodes.component';\nimport OrientationComponent from './orientation/Orientation.component';\nimport ProjectSelectComponent from './projectSelect/ProjectSelect.component';\nimport RiskLevelSelectComponent from './riskLevelSelect/RiskLevelSelect.component';\nimport { Container, Span } from './TreeEditor.styles';\nimport Popup from '../pop-up/PopUp.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TreeEditor = () => {\n  _s();\n\n  const riskLevelOptions = [{\n    label: 'Severe',\n    value: '#cb0032'\n  }, {\n    label: 'High',\n    value: '#ff6500'\n  }, {\n    label: 'Elevated',\n    value: '#fde101'\n  }, {\n    label: 'Guarded',\n    value: '#3566cd'\n  }, {\n    label: 'Low',\n    value: '#009a66'\n  }];\n  const orientations = [{\n    label: \"Horizontal\",\n    value: \"horizontal\"\n  }, {\n    label: \"Vertical\",\n    value: \"Vertical\"\n  }];\n  const [show, setShow] = React.useState(false);\n\n  const togglePopup = () => {\n    setShow(!show);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Span, {\n      children: \"Upload Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EditorButton, {\n      onClick: togglePopup,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), show ? /*#__PURE__*/_jsxDEV(Popup, {\n      toggle: togglePopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }, this) : null, /*#__PURE__*/_jsxDEV(Span, {\n      children: \"Pick An Exisiting Project to Visualize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProjectSelectComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Span, {\n      children: \"Pick a Risk Level\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RiskLevelSelectComponent, {\n      riskLevelOptions: riskLevelOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Span, {\n      children: \"Select Orientation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(OrientationComponent, {\n      orientations: orientations\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Span, {\n      children: \"Collapse Same Level Nodes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NeighborNodesComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TreeEditor, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n\n_c = TreeEditor;\nexport default TreeEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"TreeEditor\");","map":{"version":3,"sources":["C:/Users/Xuying Wang Swift/Desktop/msu-pique-lite/Pique-Lite/src/components/treeEditor/TreeEditor.component.js"],"names":["React","EditorButton","NeighborNodesComponent","OrientationComponent","ProjectSelectComponent","RiskLevelSelectComponent","Container","Span","Popup","TreeEditor","riskLevelOptions","label","value","orientations","show","setShow","useState","togglePopup"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,yCAAzB;AACA,OAAOC,sBAAP,MAAmC,yCAAnC;AACA,OAAOC,oBAAP,MAAiC,qCAAjC;AACA,OAAOC,sBAAP,MAAmC,yCAAnC;AACA,OAAOC,wBAAP,MAAqC,6CAArC;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,qBAAhC;AACA,OAAOC,KAAP,MAAkB,2BAAlB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAMC,gBAAgB,GAAG,CACb;AACIC,IAAAA,KAAK,EAAE,QADX;AAEIC,IAAAA,KAAK,EAAE;AAFX,GADa,EAKb;AACID,IAAAA,KAAK,EAAE,MADX;AAEIC,IAAAA,KAAK,EAAE;AAFX,GALa,EASb;AACID,IAAAA,KAAK,EAAE,UADX;AAEIC,IAAAA,KAAK,EAAE;AAFX,GATa,EAab;AACID,IAAAA,KAAK,EAAE,SADX;AAEIC,IAAAA,KAAK,EAAE;AAFX,GAba,EAiBb;AACID,IAAAA,KAAK,EAAE,KADX;AAEIC,IAAAA,KAAK,EAAE;AAFX,GAjBa,CAAzB;AAuBA,QAAMC,YAAY,GAAG,CACjB;AACIF,IAAAA,KAAK,EAAE,YADX;AAEIC,IAAAA,KAAK,EAAE;AAFX,GADiB,EAKjB;AACID,IAAAA,KAAK,EAAE,UADX;AAEIC,IAAAA,KAAK,EAAE;AAFX,GALiB,CAArB;AAWA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBf,KAAK,CAACgB,QAAN,CAAe,KAAf,CAAxB;;AAEA,QAAMC,WAAW,GAAG,MAAM;AAACF,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AAAe,GAA1C;;AAEA,sBACI,QAAC,SAAD;AAAA,4BACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,YAAD;AAAc,MAAA,OAAO,EAAEG,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKH,IAAI,gBAAG,QAAC,KAAD;AAAO,MAAA,MAAM,EAAEG;AAAf;AAAA;AAAA;AAAA;AAAA,YAAH,GAAmC,IAH5C,eAII,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,sBAAD;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI,QAAC,wBAAD;AAA0B,MAAA,gBAAgB,EAAEP;AAA5C;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eASI,QAAC,oBAAD;AAAsB,MAAA,YAAY,EAAEG;AAApC;AAAA;AAAA;AAAA;AAAA,YATJ,eAUI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ,eAWI,QAAC,sBAAD;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAvDD;;GAAMJ,U;;KAAAA,U;AAyDN,eAAeA,UAAf","sourcesContent":["import React from 'react';\r\nimport EditorButton from '../editorButtion/EditorButton.component';\r\nimport NeighborNodesComponent from './neighbornodes/NeighborNodes.component';\r\nimport OrientationComponent from './orientation/Orientation.component';\r\nimport ProjectSelectComponent from './projectSelect/ProjectSelect.component';\r\nimport RiskLevelSelectComponent from './riskLevelSelect/RiskLevelSelect.component';\r\nimport { Container, Span } from './TreeEditor.styles';\r\nimport Popup from '../pop-up/PopUp.component';\r\n\r\nconst TreeEditor = () => {\r\n    const riskLevelOptions = [   \r\n                {\r\n                    label: 'Severe',\r\n                    value: '#cb0032'\r\n                },\r\n                {\r\n                    label: 'High',\r\n                    value: '#ff6500'\r\n                },\r\n                {\r\n                    label: 'Elevated',\r\n                    value: '#fde101'\r\n                },\r\n                {\r\n                    label: 'Guarded',\r\n                    value: '#3566cd'\r\n                },\r\n                {\r\n                    label: 'Low',\r\n                    value: '#009a66'\r\n                }  \r\n    ]\r\n\r\n    const orientations = [\r\n        {\r\n            label: \"Horizontal\",\r\n            value: \"horizontal\"\r\n        },\r\n        {\r\n            label: \"Vertical\",\r\n            value: \"Vertical\"\r\n        }\r\n    ]\r\n\r\n    const [show, setShow] = React.useState(false);\r\n\r\n    const togglePopup = () => {setShow(!show)};\r\n\r\n    return (\r\n        <Container>\r\n            <Span>Upload Files</Span>\r\n            <EditorButton onClick={togglePopup}>Upload</EditorButton>\r\n            {show ? <Popup toggle={togglePopup}/> : null}\r\n            <Span>Pick An Exisiting Project to Visualize</Span>\r\n            <ProjectSelectComponent/>\r\n            <Span>Pick a Risk Level</Span>\r\n            <RiskLevelSelectComponent riskLevelOptions={riskLevelOptions}/>\r\n            <Span>Select Orientation</Span>\r\n            <OrientationComponent orientations={orientations}/>\r\n            <Span>Collapse Same Level Nodes</Span>\r\n            <NeighborNodesComponent/>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default TreeEditor;"]},"metadata":{},"sourceType":"module"}