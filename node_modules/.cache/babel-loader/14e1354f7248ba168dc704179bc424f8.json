{"ast":null,"code":"var _jsxFileName = \"/Users/xuyingwang/Documents/Pique-Lite/src/components/arrowButton/ArrowButton.component.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Container, Arrow } from './ArrowButton.styles';\nimport { IoMdArrowDropdown } from \"react-icons/io\";\nimport { IoMdArrowDropup } from \"react-icons/io\";\nimport EditorButtion from '../editorButtion/EditorButton.component';\nimport { createStructuredSelector } from 'reselect';\nimport { selectProjects } from '../../redux/piqueTree/PiqueTree.selector';\nimport { connect } from 'react-redux';\nimport RiskCard from '../riskCard/RiskCard.component';\nimport { getRiskColor, getRiskIcon } from '../../utils/piqueTree.utils';\nimport { setRiskList } from '../../redux/piqueTree/PiqueTree.actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ArrowButton = ({\n  children,\n  projects,\n  setRiskList\n}) => {\n  _s();\n\n  const [show, setShow] = React.useState(false);\n  console.log(getRiskColor(0.5));\n\n  const handleCard = file => {\n    let results = [];\n    file.fileContent.children.map(item => results.push({\n      qaName: item.name,\n      qaValue: item.value,\n      qaColor: getRiskColor(item.value),\n      qaIcon: getRiskIcon(item.value)\n    }));\n    setRiskList(results);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(EditorButtion, {\n      onClick: () => setShow(!show),\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [children, show ? /*#__PURE__*/_jsxDEV(Arrow, {\n          children: /*#__PURE__*/_jsxDEV(IoMdArrowDropup, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 23\n        }, this) : /*#__PURE__*/_jsxDEV(Arrow, {\n          children: /*#__PURE__*/_jsxDEV(IoMdArrowDropdown, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), show && projects.map((file, i) => /*#__PURE__*/_jsxDEV(EditorButtion, {\n      onClick: () => handleCard(file),\n      children: `v${file.versionNumber}`\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ArrowButton, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n\n_c = ArrowButton;\nconst mapStateToProps = createStructuredSelector({\n  projects: selectProjects\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setRiskList: file => dispatch(setRiskList(file))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArrowButton);\n\nvar _c;\n\n$RefreshReg$(_c, \"ArrowButton\");","map":{"version":3,"sources":["/Users/xuyingwang/Documents/Pique-Lite/src/components/arrowButton/ArrowButton.component.js"],"names":["React","Container","Arrow","IoMdArrowDropdown","IoMdArrowDropup","EditorButtion","createStructuredSelector","selectProjects","connect","RiskCard","getRiskColor","getRiskIcon","setRiskList","ArrowButton","children","projects","show","setShow","useState","console","log","handleCard","file","results","fileContent","map","item","push","qaName","name","qaValue","value","qaColor","qaIcon","i","versionNumber","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAgC,sBAAhC;AACA,SAAQC,iBAAR,QAAgC,gBAAhC;AACA,SAAQC,eAAR,QAA8B,gBAA9B;AACA,OAAOC,aAAP,MAA0B,yCAA1B;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,cAAT,QAA+B,0CAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,6BAA1C;AACA,SAASC,WAAT,QAA4B,yCAA5B;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,QAAX;AAAqBH,EAAAA;AAArB,CAAD,KAAuC;AAAA;;AACvD,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBjB,KAAK,CAACkB,QAAN,CAAe,KAAf,CAAxB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYV,YAAY,CAAC,GAAD,CAAxB;;AACA,QAAMW,UAAU,GAAIC,IAAD,IAAU;AACzB,QAAIC,OAAO,GAAG,EAAd;AACAD,IAAAA,IAAI,CAACE,WAAL,CAAiBV,QAAjB,CAA0BW,GAA1B,CAA8BC,IAAI,IAC9BH,OAAO,CAACI,IAAR,CAAa;AACTC,MAAAA,MAAM,EAAEF,IAAI,CAACG,IADJ;AAETC,MAAAA,OAAO,EAAEJ,IAAI,CAACK,KAFL;AAGTC,MAAAA,OAAO,EAAEtB,YAAY,CAACgB,IAAI,CAACK,KAAN,CAHZ;AAITE,MAAAA,MAAM,EAAEtB,WAAW,CAACe,IAAI,CAACK,KAAN;AAJV,KAAb,CADJ;AAQDnB,IAAAA,WAAW,CAACW,OAAD,CAAX;AACF,GAXD;;AAYA,sBACI;AAAA,4BACI,QAAC,aAAD;AAAgB,MAAA,OAAO,EAAE,MAAMN,OAAO,CAAC,CAACD,IAAF,CAAtC;AAAA,6BACI,QAAC,SAAD;AAAA,mBACKF,QADL,EAEKE,IAAI,gBACH,QAAC,KAAD;AAAA,iCAAO,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAP;AAAA;AAAA;AAAA;AAAA,gBADG,gBAEH,QAAC,KAAD;AAAA,iCAAO,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAP;AAAA;AAAA;AAAA;AAAA,gBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,EAUKA,IAAI,IAAID,QAAQ,CAACU,GAAT,CAAa,CAACH,IAAD,EAAOY,CAAP,kBAClB,QAAC,aAAD;AACI,MAAA,OAAO,EACP,MAAMb,UAAU,CAACC,IAAD,CAFpB;AAAA,gBAIM,IAAGA,IAAI,CAACa,aAAc;AAJ5B,OAAoBD,CAApB;AAAA;AAAA;AAAA;AAAA,YADK,CAVb;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CArCD;;GAAMrB,W;;KAAAA,W;AAsCN,MAAMuB,eAAe,GAAG9B,wBAAwB,CAAC;AAC7CS,EAAAA,QAAQ,EAAER;AADmC,CAAD,CAAhD;;AAIA,MAAM8B,kBAAkB,GAAGC,QAAQ,KAAK;AACpC1B,EAAAA,WAAW,EAAEU,IAAI,IAAIgB,QAAQ,CAAC1B,WAAW,CAACU,IAAD,CAAZ;AADO,CAAL,CAAnC;;AAGA,eAAed,OAAO,CAAC4B,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CxB,WAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { Container, Arrow} from './ArrowButton.styles'\nimport {IoMdArrowDropdown} from \"react-icons/io\";\nimport {IoMdArrowDropup} from \"react-icons/io\"\nimport EditorButtion from '../editorButtion/EditorButton.component';\nimport { createStructuredSelector } from 'reselect';\nimport { selectProjects } from '../../redux/piqueTree/PiqueTree.selector';\nimport { connect } from 'react-redux';\nimport RiskCard from '../riskCard/RiskCard.component';\nimport { getRiskColor, getRiskIcon } from '../../utils/piqueTree.utils';\nimport { setRiskList } from '../../redux/piqueTree/PiqueTree.actions';\n\nconst ArrowButton = ({children, projects, setRiskList}) => {\n    const [show, setShow] = React.useState(false);\n    \n    console.log(getRiskColor(0.5))\n    const handleCard = (file) => {\n        let results = []\n        file.fileContent.children.map(item => \n            results.push({\n                qaName: item.name,\n                qaValue: item.value,\n                qaColor: getRiskColor(item.value),\n                qaIcon: getRiskIcon(item.value)\n            })\n       )\n       setRiskList(results)\n    }\n    return (\n        <div>\n            <EditorButtion  onClick={() => setShow(!show)}>\n                <Container>\n                    {children}\n                    {show\n                    ? <Arrow><IoMdArrowDropup/></Arrow>\n                    : <Arrow><IoMdArrowDropdown/></Arrow>\n                    }\n                </Container>\n            </EditorButtion>\n            {show && projects.map((file, i) => \n                <EditorButtion key={i} \n                    onClick={\n                    () => handleCard(file)}\n                >\n                    {`v${file.versionNumber}`}\n                </EditorButtion>)\n            }\n        </div>\n    )\n}\nconst mapStateToProps = createStructuredSelector({\n    projects: selectProjects\n})\n\nconst mapDispatchToProps = dispatch => ({\n    setRiskList: file => dispatch(setRiskList(file))\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(ArrowButton)"]},"metadata":{},"sourceType":"module"}