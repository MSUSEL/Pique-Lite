{"ast":null,"code":"var _jsxFileName = \"/Users/xuyingwang/Documents/Pique-Lite/src/components/treeEditor/projectSelect/ProjectSelect.component.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { createStructuredSelector } from 'reselect';\nimport EditorButton from '../../editorButtion/EditorButton.component';\nimport { selectProjects } from '../../../redux/piqueTree/PiqueTree.selector';\nimport { connect } from 'react-redux';\nimport { setPiqueTree, setProjectName } from '../../../redux/piqueTree/PiqueTree.actions';\nimport { IoMdArrowDropdown } from 'react-icons/io';\nimport { IoMdArrowDropup } from 'react-icons/io';\nimport { Arrow, Container } from './ProjectsSelect.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProjectSelect = ({\n  projects,\n  setProjectName,\n  setPiqueTree\n}) => {\n  _s();\n\n  const [isListOpen, setList] = React.useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(EditorButton, {\n        onClick: () => setList(!isListOpen),\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: [\"Show Projects\", isListOpen ? /*#__PURE__*/_jsxDEV(Arrow, {\n            children: [\" \", /*#__PURE__*/_jsxDEV(IoMdArrowDropup, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 35\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 27\n          }, this) : /*#__PURE__*/_jsxDEV(Arrow, {\n            children: [\" \", /*#__PURE__*/_jsxDEV(IoMdArrowDropdown, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 35\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), isListOpen && projects.map((p, i) => /*#__PURE__*/_jsxDEV(EditorButton, {\n      onClick: () => {\n        setProjectName(p.fileName);\n        setPiqueTree(p.fileContent);\n      },\n      children: p.fileName\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 52\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProjectSelect, \"XOdt7eViALkHV+Njoizou8VWtcY=\");\n\n_c = ProjectSelect;\nconst mapStateToProps = createStructuredSelector({\n  projects: selectProjects\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setProjectName: data => dispatch(setProjectName(data)),\n  setPiqueTree: data => dispatch(setPiqueTree(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectSelect);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectSelect\");","map":{"version":3,"sources":["/Users/xuyingwang/Documents/Pique-Lite/src/components/treeEditor/projectSelect/ProjectSelect.component.js"],"names":["React","createStructuredSelector","EditorButton","selectProjects","connect","setPiqueTree","setProjectName","IoMdArrowDropdown","IoMdArrowDropup","Arrow","Container","ProjectSelect","projects","isListOpen","setList","useState","map","p","i","fileName","fileContent","mapStateToProps","mapDispatchToProps","dispatch","data"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,SAAQC,cAAR,QAA6B,6CAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,4CAA7C;AACA,SAAQC,iBAAR,QAAgC,gBAAhC;AACA,SAAQC,eAAR,QAA8B,gBAA9B;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,yBAAjC;;;AAEA,MAAMC,aAAa,GAAE,CAAC;AAACC,EAAAA,QAAD;AAAWN,EAAAA,cAAX;AAA2BD,EAAAA;AAA3B,CAAD,KAA8C;AAAA;;AAC/D,QAAM,CAACQ,UAAD,EAAaC,OAAb,IAAwBd,KAAK,CAACe,QAAN,CAAe,KAAf,CAA9B;AACA,sBACI;AAAA,4BACI;AAAA,6BACI,QAAC,YAAD;AAAc,QAAA,OAAO,EAAE,MAAMD,OAAO,CAAC,CAACD,UAAF,CAApC;AAAA,+BACI,QAAC,SAAD;AAAA,sCAECA,UAAU,gBACL,QAAC,KAAD;AAAA,yCAAQ,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,oBAAR;AAAA;AAAA;AAAA;AAAA;AAAA,kBADK,gBAEL,QAAC,KAAD;AAAA,yCAAQ,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,oBAAR;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,EAYMA,UAAU,IAAID,QAAQ,CAACI,GAAT,CAAa,CAACC,CAAD,EAAIC,CAAJ,kBAAU,QAAC,YAAD;AAAsB,MAAA,OAAO,EAChE,MAAM;AACFZ,QAAAA,cAAc,CAACW,CAAC,CAACE,QAAH,CAAd;AACAd,QAAAA,YAAY,CAACY,CAAC,CAACG,WAAH,CAAZ;AACH,OAJkC;AAAA,gBAK9BH,CAAC,CAACE;AAL4B,OAAmBD,CAAnB;AAAA;AAAA;AAAA;AAAA,YAAvB,CAZpB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CAzBD;;GAAMP,a;;KAAAA,a;AA2BN,MAAMU,eAAe,GAAGpB,wBAAwB,CAAC;AAC7CW,EAAAA,QAAQ,EAAET;AADmC,CAAD,CAAhD;;AAIA,MAAMmB,kBAAkB,GAAGC,QAAQ,KAAK;AACpCjB,EAAAA,cAAc,EAAEkB,IAAI,IAAID,QAAQ,CAACjB,cAAc,CAACkB,IAAD,CAAf,CADI;AAEpCnB,EAAAA,YAAY,EAAEmB,IAAI,IAAID,QAAQ,CAAClB,YAAY,CAACmB,IAAD,CAAb;AAFM,CAAL,CAAnC;;AAIA,eAAepB,OAAO,CAACiB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CX,aAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { createStructuredSelector } from 'reselect';\nimport EditorButton from '../../editorButtion/EditorButton.component';\nimport {selectProjects} from '../../../redux/piqueTree/PiqueTree.selector';\nimport { connect } from 'react-redux';\nimport { setPiqueTree, setProjectName } from '../../../redux/piqueTree/PiqueTree.actions';\nimport {IoMdArrowDropdown} from 'react-icons/io';\nimport {IoMdArrowDropup} from 'react-icons/io'\nimport { Arrow, Container } from './ProjectsSelect.styles';\n\nconst ProjectSelect= ({projects, setProjectName, setPiqueTree}) => {\n    const [isListOpen, setList] = React.useState(false);\n    return (\n        <div>\n            <div>\n                <EditorButton onClick={() => setList(!isListOpen)}>\n                    <Container>\n                    Show Projects \n                    {isListOpen \n                        ? <Arrow> <IoMdArrowDropup/> </Arrow>\n                        : <Arrow> <IoMdArrowDropdown/> </Arrow>\n                    }\n                    </Container>\n                </EditorButton>\n            </div>\n            { isListOpen && projects.map((p, i) => <EditorButton key={i} onClick={\n                () => {\n                    setProjectName(p.fileName); \n                    setPiqueTree(p.fileContent)\n                }}>\n                    {p.fileName}\n                 </EditorButton>)\n        }\n        </div>\n    )\n}\n\nconst mapStateToProps = createStructuredSelector({\n    projects: selectProjects\n})\n\nconst mapDispatchToProps = dispatch => ({\n    setProjectName: data => dispatch(setProjectName(data)),\n    setPiqueTree: data => dispatch(setPiqueTree(data))\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectSelect);"]},"metadata":{},"sourceType":"module"}