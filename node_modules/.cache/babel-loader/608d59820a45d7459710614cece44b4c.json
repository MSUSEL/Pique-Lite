{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Xuying Wang Swift\\\\Desktop\\\\msu-pique-lite\\\\Pique-Lite\\\\src\\\\components\\\\pop-up\\\\MultipleFileUpload.component.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { setProjects, setQFiles, setQuarters, setVersions } from '../../redux/piqueTree/PiqueTree.actions';\nimport { readAllFiles } from '../../utils/fileUpload.utils';\nimport { LoaderWrapper, Label, Input, SubmitButton, ResetButton } from './MultipleFileUpload.styles';\nimport { selectProjects, selectQuarters, selectVersions } from '../../redux/piqueTree/PiqueTree.selector';\nimport { Line } from 'rc-progress';\nimport { Green } from '../../utils/color';\nimport FormInput from '../formInput/FormInput.component';\nimport { useAlert } from 'react-alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MultipleFilesUpload = ({\n  projects,\n  setProjects,\n  quarters,\n  setQuarters,\n  versions,\n  setVersions\n}) => {\n  _s();\n\n  const alert = useAlert();\n  const [progress, setProcess] = React.useState(0);\n  const [quarterNumber, setQuarterNumber] = React.useState('');\n  const [quarterFiles, setQuarterFiles] = React.useState([]);\n  const [submitting, setSubmitting] = React.useState(false);\n  const [file, setFile] = React.useState(null);\n\n  const handleUpload = async e => {\n    let allFiles = [];\n    [...e.target.files].filter(file => file.size !== 0).map(file => allFiles.push(file));\n    const results = await readAllFiles(allFiles, setProcess);\n    setQuarterFiles(results);\n    setFile(results[results.length - 1]);\n  };\n\n  console.log(\"filesss\", quarterFiles); // onChange to handle version input\n\n  const handleQuarterNumber = e => {\n    setQuarterNumber(e.target.value);\n\n    if (file !== null) {\n      file[\"QuarterNumber\"] = e.target.value;\n    } else {\n      alert.show(\"file content is null\");\n    }\n  };\n\n  console.log(\"quarter number\", quarterNumber); // onClick to handle submitting\n\n  const handleSubmitting = () => {\n    setSubmitting(!submitting);\n  };\n\n  const checker = (arr, target) => target.every(v => arr.includes(v));\n\n  const checkFileInProjects = (arr, target) => {\n    const checker = target.every(f => arr.includes(f));\n    return checker;\n  }; //validates inputs\n\n\n  const handleValidation = () => {\n    if (quarterFiles === null) {\n      alert.show(\"You must select a file to upload!\");\n    }\n\n    if (quarterNumber === '') {\n      alert.show(\" you mush enter a quarter number\");\n    }\n\n    if (checkFileInProjects(projects, quarterFiles)) {\n      alert.show(\"These files already exist, please select a different one\");\n    }\n\n    if (quarters.includes(quarterNumber)) {\n      alert.show(\"this quarter number already exists, please give it a different quarter number\");\n    }\n  }; // onClick to setprojects setVersions\n\n\n  const handleSubmit = () => {\n    handleValidation();\n\n    if (quarterNumber !== '' && quarterFiles !== null && !checker(projects, quarterFiles) && !quarters.includes(quarterNumber)) {\n      quarters.push(quarterNumber);\n      const combined = [...projects, ...quarterFiles];\n      setQuarters(quarters);\n      setProjects(combined);\n      handleSubmitting();\n      let vList = [];\n      projects.map((file, index) => file[\"versionNumber\"] = index + 1);\n      projects.map((file, index) => vList.push(index + 1));\n      setVersions(vList);\n    }\n  };\n\n  console.log(\"quarters \", quarters);\n  console.log(\"submmitting\", submitting);\n  console.log(\"versions\", versions);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(LoaderWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"Upload Multiple Files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"file\",\n          accept: \".json\",\n          multiple: true,\n          onChange: handleUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        label: \"Quarter Number: Q1\",\n        name: \"quarter\",\n        value: quarterNumber,\n        onChange: handleQuarterNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n        type: \"submit\",\n        onClick: () => {\n          handleSubmit();\n        },\n        disabled: submitting,\n        submit: submitting,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), submitting ? /*#__PURE__*/_jsxDEV(ResetButton, {\n        onClick: handleSubmitting,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 31\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), projects && progress ? projects.map((file, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"v\", index + 1, \" \", file.fileName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          percent: progress,\n          strokeWidth: \"1\",\n          strokeColor: Green.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 33\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 29\n      }, this);\n    }) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MultipleFilesUpload, \"4NcnY/OZjowa1ub+RCu5fIMaFB4=\", false, function () {\n  return [useAlert];\n});\n\n_c = MultipleFilesUpload;\nconst mapStateToProps = createStructuredSelector({\n  projects: selectProjects,\n  quarters: selectQuarters,\n  versions: selectVersions\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setProjects: data => dispatch(setProjects(data)),\n  setQuarters: data => dispatch(setQuarters(data)),\n  setVersions: data => dispatch(setVersions(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MultipleFilesUpload);\n\nvar _c;\n\n$RefreshReg$(_c, \"MultipleFilesUpload\");","map":{"version":3,"sources":["C:/Users/Xuying Wang Swift/Desktop/msu-pique-lite/Pique-Lite/src/components/pop-up/MultipleFileUpload.component.js"],"names":["React","connect","createStructuredSelector","setProjects","setQFiles","setQuarters","setVersions","readAllFiles","LoaderWrapper","Label","Input","SubmitButton","ResetButton","selectProjects","selectQuarters","selectVersions","Line","Green","FormInput","useAlert","MultipleFilesUpload","projects","quarters","versions","alert","progress","setProcess","useState","quarterNumber","setQuarterNumber","quarterFiles","setQuarterFiles","submitting","setSubmitting","file","setFile","handleUpload","e","allFiles","target","files","filter","size","map","push","results","length","console","log","handleQuarterNumber","value","show","handleSubmitting","checker","arr","every","v","includes","checkFileInProjects","f","handleValidation","handleSubmit","combined","vList","index","fileName","mapStateToProps","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport {  setProjects, setQFiles, setQuarters, setVersions } from '../../redux/piqueTree/PiqueTree.actions';\r\nimport { readAllFiles } from '../../utils/fileUpload.utils';\r\n\r\nimport { LoaderWrapper, Label, Input, SubmitButton, ResetButton} from './MultipleFileUpload.styles';\r\nimport { selectProjects, selectQuarters, selectVersions } from '../../redux/piqueTree/PiqueTree.selector';\r\nimport { Line } from 'rc-progress';\r\nimport { Green } from '../../utils/color';\r\n\r\nimport FormInput from '../formInput/FormInput.component';\r\nimport { useAlert } from 'react-alert'\r\n\r\n\r\n\r\nconst MultipleFilesUpload = ({projects, setProjects, quarters, setQuarters, versions, setVersions}) => {\r\n    const alert = useAlert();\r\n    const [progress, setProcess] = React.useState(0)\r\n    const [quarterNumber, setQuarterNumber] = React.useState('');\r\n    const [quarterFiles, setQuarterFiles] = React.useState([]);\r\n    const [submitting, setSubmitting] = React.useState(false);\r\n    const [file, setFile] = React.useState(null);\r\n\r\n    const handleUpload = async (e) => {\r\n        let allFiles = [];\r\n        [...e.target.files].filter(file => file.size !== 0).map(file=> allFiles.push(file));\r\n        const results = await readAllFiles(allFiles, setProcess);\r\n        setQuarterFiles(results)\r\n        setFile(results[results.length -1]);\r\n    }\r\n    console.log(\"filesss\", quarterFiles);\r\n       // onChange to handle version input\r\n    const handleQuarterNumber = e => {\r\n        setQuarterNumber(e.target.value)\r\n        if (file !== null) {\r\n            file[\"QuarterNumber\"]=e.target.value\r\n        } else{\r\n            alert.show(\"file content is null\")\r\n        }\r\n    }\r\n\r\n    console.log(\"quarter number\", quarterNumber)\r\n\r\n    // onClick to handle submitting\r\n    const handleSubmitting = () => {setSubmitting(!submitting)}\r\n\r\n    const checker = (arr, target) => target.every(v => arr.includes(v));\r\n\r\n    const checkFileInProjects =(arr, target) => {\r\n        const checker = target.every(f => arr.includes(f));\r\n        return checker;\r\n    }\r\n\r\n    //validates inputs\r\n    const handleValidation = () => {\r\n        if (quarterFiles === null ) {\r\n            alert.show(\"You must select a file to upload!\");\r\n        } \r\n        if (quarterNumber === '') {\r\n            alert.show(\" you mush enter a quarter number\")\r\n        }\r\n        if (checkFileInProjects(projects, quarterFiles)) {\r\n            alert.show(\"These files already exist, please select a different one\")\r\n        }\r\n        if (quarters.includes(quarterNumber)) {\r\n            alert.show(\"this quarter number already exists, please give it a different quarter number\")\r\n        }\r\n    }\r\n\r\n\r\n     // onClick to setprojects setVersions\r\n     const handleSubmit = () => {\r\n        handleValidation()\r\n        if (quarterNumber !== '' && quarterFiles !== null && !checker(projects, quarterFiles) && !quarters.includes(quarterNumber)) {\r\n            quarters.push(quarterNumber);\r\n            const combined = [...projects, ...quarterFiles]\r\n            setQuarters(quarters)\r\n            setProjects(combined)\r\n            handleSubmitting()\r\n            let vList = [];\r\n            projects.map((file, index) => file[\"versionNumber\"] = index + 1);\r\n            projects.map((file, index) => vList.push(index+1))\r\n            setVersions(vList);\r\n        }\r\n    }\r\n\r\n   \r\n    console.log(\"quarters \", quarters)\r\n    console.log(\"submmitting\", submitting)\r\n    console.log(\"versions\", versions)\r\n\r\n    return (\r\n        <div>\r\n            <LoaderWrapper>\r\n                <Label>\r\n                    <i>Upload Multiple Files</i>\r\n                    <Input \r\n                        type=\"file\" \r\n                        accept=\".json\" \r\n                        multiple={true} \r\n                        onChange={handleUpload}\r\n                    />\r\n                </Label>\r\n                \r\n                <FormInput\r\n                    type='text'\r\n                    label={\"Quarter Number: Q1\"}\r\n                    name=\"quarter\"\r\n                    value={quarterNumber}\r\n                    onChange={handleQuarterNumber}\r\n                />\r\n                <SubmitButton\r\n                        type='submit' \r\n                        onClick={() => {handleSubmit()}}\r\n                        disabled={submitting}\r\n                        submit={submitting}\r\n                    >\r\n                        Submit\r\n                </SubmitButton>\r\n                {submitting ? <ResetButton onClick={handleSubmitting}>Reset</ResetButton> : null}\r\n            </LoaderWrapper>\r\n                {projects && progress ? (\r\n                    projects.map((file, index) => {\r\n                        return (\r\n                            <div key={index}>\r\n                                <p>v{index + 1} {file.fileName}</p>\r\n                                <Line percent={progress} strokeWidth=\"1\" strokeColor={Green.value}/>\r\n                            </div>\r\n                        )\r\n                    })\r\n                ) : null}\r\n\r\n        </div>\r\n\r\n     )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  projects: selectProjects,\r\n  quarters: selectQuarters,\r\n  versions: selectVersions\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setProjects: data => dispatch(setProjects(data)),\r\n    setQuarters: data => dispatch(setQuarters(data)),\r\n    setVersions: data => dispatch(setVersions(data))\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MultipleFilesUpload)"]},"metadata":{},"sourceType":"module"}